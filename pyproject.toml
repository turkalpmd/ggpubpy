[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ggpubpy"
version = "0.4.0"
description = "matplotlib Based Publication-Ready Plots with Statistical Tests"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Turkalp Akbasli", email = "akbaslint@gmail.com"}
]
maintainers = [
    {name = "Turkalp Akbasli", email = "akbaslint@gmail.com"}
]
keywords = [
    "matplotlib",
    "plotting",
    "visualization",
    "statistics",
    "publication",
    "ggplot",
    "data-science",
    "alluvial",
    "flow-diagram",
    "correlation-matrix",
    "boxplot",
    "violin-plot",
    "shift-plot"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: Matplotlib"
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.20.0",
    "pandas>=1.3.0",
    "matplotlib>=3.5.0",
    "scipy>=1.7.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "isort>=5.10.0",
    "mypy>=0.991",
    "pre-commit>=2.20.0",
    "twine>=4.0.0",
    "build>=0.8.0"
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
    "sphinx-autodoc-typehints>=1.12.0",
    "linkify-it-py>=2.0.0"
]
examples = [
    "seaborn>=0.11.0",
    "jupyter>=1.0.0",
    "notebook>=6.4.0"
]

[project.urls]
Homepage = "https://github.com/turkalpmd/ggpubpy"
Repository = "https://github.com/turkalpmd/ggpubpy.git"
Documentation = "https://ggpubpy.readthedocs.io"
"Bug Tracker" = "https://github.com/turkalpmd/ggpubpy/issues"
"Source Code" = "https://github.com/turkalpmd/ggpubpy"
"Download" = "https://pypi.org/project/ggpubpy/#files"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["ggpubpy*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=ggpubpy",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "matplotlib.*",
    "scipy.*",
    "pandas.*",
    "numpy.*"
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["ggpubpy"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]
